{"version":3,"sources":["components/loader/index.js","components/loader/loader.js","components/weather-data/weather-data.js","components/weather-data/index.js"],"names":["Loader","className","WeatherData","useContext","Context","weatherData","weatherDataImperial","loading","imperialUnits","Content","message","Fragment","name","weather","description","src","icon","alt","width","height","main","temp","temp_min","temp_max","feels_like","wind","speed","pressure","humidity","data","loaded","content"],"mappings":"6KAEeA,G,MCEA,WACX,OACI,yBAAKC,UAAU,2CACX,yBAAKA,UAAU,oBACX,8BACA,8BACA,6BACI,+BAEJ,6BACI,mCCkELC,G,MA3EK,WAAO,IAAD,EACqDC,qBAAWC,KAA/EC,EADe,EACfA,YAAaC,EADE,EACFA,oBAAqBC,EADnB,EACmBA,QAASC,EAD5B,EAC4BA,cAC5CC,EAAU,WACZ,OAAIJ,EAAYK,QAER,iUAGAF,EAEI,kBAAC,IAAMG,SAAP,KACI,+LAAmCL,EAAoBM,MACvD,0JAC4BN,EAAoBO,QAAQ,GAAGC,YACvD,yBACIC,IAAG,2CAAsCT,EAAoBO,QAAQ,GAAGG,KAArE,WACHC,IAAI,wFACJC,MAAO,GACPC,OAAQ,MAGhB,4BACI,wBAAIlB,UAAU,mBAAd,uEAA8CK,EAAoBc,KAAKC,KAAvE,SACA,wBAAIpB,UAAU,mBAAd,0IAC8BK,EAAoBc,KAAKE,SADvD,SAGA,wBAAIrB,UAAU,mBAAd,gJAC+BK,EAAoBc,KAAKG,SADxD,SAGA,wBAAItB,UAAU,mBAAd,8EACoBK,EAAoBc,KAAKI,WAD7C,SAGA,wBAAIvB,UAAU,mBAAd,mCAAwCK,EAAoBmB,KAAKC,MAAjE,8BACA,wBAAIzB,UAAU,mBAAd,qDAA2CK,EAAoBc,KAAKO,SAApE,2CACA,wBAAI1B,UAAU,mBAAd,2DAA4CK,EAAoBc,KAAKQ,SAArE,QAMR,kBAAC,IAAMjB,SAAP,KACI,+LAAmCN,EAAYO,MAC/C,0JAC4BP,EAAYQ,QAAQ,GAAGC,YAC/C,yBACIC,IAAG,2CAAsCV,EAAYQ,QAAQ,GAAGG,KAA7D,WACHC,IAAI,wFACJC,MAAO,GACPC,OAAQ,MAGhB,4BACI,wBAAIlB,UAAU,mBAAd,uEAA8CI,EAAYe,KAAKC,KAA/D,SACA,wBAAIpB,UAAU,mBAAd,0IAA0DI,EAAYe,KAAKE,SAA3E,SACA,wBAAIrB,UAAU,mBAAd,gJAA2DI,EAAYe,KAAKG,SAA5E,SACA,wBAAItB,UAAU,mBAAd,8EAAgDI,EAAYe,KAAKI,WAAjE,SACA,wBAAIvB,UAAU,mBAAd,mCAAwCI,EAAYoB,KAAKC,MAAzD,kBACA,wBAAIzB,UAAU,mBAAd,qDAA2CI,EAAYe,KAAKO,SAA5D,2CACA,wBAAI1B,UAAU,mBAAd,2DAA4CI,EAAYe,KAAKQ,SAA7D,SAOlBC,EAjEgB,EAC2CC,OAgE3C,kBAACrB,EAAD,MAAc,6OAC9BsB,EAAUxB,EAAU,kBAAC,EAAD,MAAasB,EAEvC,OACI,yBAAK5B,UAAU,QACV8B,KCzEE7B","file":"static/js/3.b378c147.chunk.js","sourcesContent":["import Loader from \"./loader\";\r\n\r\nexport default Loader;","import React from \"react\";\r\n\r\nimport \"./loader.css\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-double-ring-shjxobb55\">\r\n            <div className=\"ldio-euwvyklto5v\">\r\n                <div></div>\r\n                <div></div>\r\n                <div>\r\n                    <div></div>\r\n                </div>\r\n                <div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, {useContext} from \"react\";\r\nimport {Context} from \"../context\";\r\nimport Loader from \"../loader\";\r\nimport \"./weather-data.css\";\r\n\r\nconst WeatherData = () => {\r\n    const {weatherData, weatherDataImperial, loading, imperialUnits, loaded} = useContext(Context);\r\n    const Content = () => {\r\n        if (weatherData.message) {\r\n            return (\r\n                <h2>Не удалось найти погодную информацию по данному городу</h2>\r\n            );\r\n        } else {\r\n            if (imperialUnits) {\r\n                return (\r\n                    <React.Fragment>\r\n                        <h2>Погодная информация по городу {weatherDataImperial.name}</h2>\r\n                        <h4>\r\n                            Погода описывается как {weatherDataImperial.weather[0].description}\r\n                            <img\r\n                                src={`http://openweathermap.org/img/wn/${weatherDataImperial.weather[0].icon}@2x.png`}\r\n                                alt=\"погодная иконка\"\r\n                                width={45}\r\n                                height={45}\r\n                            />\r\n                        </h4>\r\n                        <ul>\r\n                            <li className=\"weather-data-li\">Температура: {weatherDataImperial.main.temp}&deg;F</li>\r\n                            <li className=\"weather-data-li\">\r\n                                Минимальная температура: {weatherDataImperial.main.temp_min}&deg;F\r\n                            </li>\r\n                            <li className=\"weather-data-li\">\r\n                                Максимальная температура: {weatherDataImperial.main.temp_max}&deg;F\r\n                            </li>\r\n                            <li className=\"weather-data-li\">\r\n                                Ощущается как: {weatherDataImperial.main.feels_like}&deg;F\r\n                            </li>\r\n                            <li className=\"weather-data-li\">Ветер: {weatherDataImperial.wind.speed} м/час</li>\r\n                            <li className=\"weather-data-li\">Давление: {weatherDataImperial.main.pressure} мм рт.ст</li>\r\n                            <li className=\"weather-data-li\">Влажность: {weatherDataImperial.main.humidity} %</li>\r\n                        </ul>\r\n                    </React.Fragment>\r\n                );\r\n            } else {\r\n                return (\r\n                    <React.Fragment>\r\n                        <h2>Погодная информация по городу {weatherData.name}</h2>\r\n                        <h4>\r\n                            Погода описывается как {weatherData.weather[0].description}\r\n                            <img\r\n                                src={`http://openweathermap.org/img/wn/${weatherData.weather[0].icon}@2x.png`}\r\n                                alt=\"погодная иконка\"\r\n                                width={45}\r\n                                height={45}\r\n                            />\r\n                        </h4>\r\n                        <ul>\r\n                            <li className=\"weather-data-li\">Температура: {weatherData.main.temp}&deg;C</li>\r\n                            <li className=\"weather-data-li\">Минимальная температура: {weatherData.main.temp_min}&deg;C</li>\r\n                            <li className=\"weather-data-li\">Максимальная температура: {weatherData.main.temp_max}&deg;C</li>\r\n                            <li className=\"weather-data-li\">Ощущается как: {weatherData.main.feels_like}&deg;C</li>\r\n                            <li className=\"weather-data-li\">Ветер: {weatherData.wind.speed} м/с</li>\r\n                            <li className=\"weather-data-li\">Давление: {weatherData.main.pressure} мм рт.ст</li>\r\n                            <li className=\"weather-data-li\">Влажность: {weatherData.main.humidity} %</li>\r\n                        </ul>\r\n                    </React.Fragment>\r\n                );\r\n            }\r\n        }\r\n    };\r\n    const data = loaded ? <Content /> : <h2>В этой сессии вы пока не делали запросов</h2>;\r\n    const content = loading ? <Loader /> : data;\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n            {content}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherData;","import WeatherData from \"./weather-data\";\r\n\r\nexport default WeatherData;"],"sourceRoot":""}
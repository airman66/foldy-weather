{"version":3,"sources":["components/form/index.js","components/form/form.js","services/wapi.service.js","components/last-requests/index.js","components/last-requests/last-requests.js","components/app/app.js","components/app/index.js","index.js","components/context.js"],"names":["Form","useContext","Context","label","onInputChange","onFormSubmit","onSubmit","e","className","htmlFor","type","id","value","onChange","Wapi","__getUrl","city","units","toLowerCase","getWeatherByCity","a","fetch","response","json","LastRequests","lastRequests","onLastRequestClick","areThereRequests","elements","filter","el","reverse","map","idx","Dropdown","Item","key","bsPrefix","as","onClick","Toggle","Menu","UnitsMode","React","lazy","WeatherData","AppHeader","App","useState","setLabel","weatherData","setWeatherData","weatherDataImperial","setWeatherDataImperial","loading","setLoading","loaded","setLoaded","localStorage","getItem","imperialUnits","setImperialUnits","JSON","parse","setLastRequests","length","setAreThereRequests","wapi","preventDefault","then","data","message","filteredRequests","push","name","Array","from","Set","useEffect","setItem","toString","stringify","Provider","target","onUnitsModeChange","console","log","Suspense","fallback","ReactDOM","render","document","getElementById","createContext"],"mappings":"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","file":"static/js/main.96fb97f2.chunk.js","sourcesContent":["import Form from \"./form\";\r\n\r\nexport default Form;","import React, {useContext} from \"react\";\r\nimport {Context} from \"../context\";\r\n\r\nconst Form = () => {\r\n    const {label, onInputChange, onFormSubmit} = useContext(Context);\r\n\r\n    return (\r\n        <form\r\n            onSubmit={(e) => onFormSubmit(e)}\r\n            className=\"mb-4\"\r\n        >\r\n            <label htmlFor=\"inputCity\">Введите название города, в котором хотите узнать погоду:</label>\r\n            <div className=\"d-flex align-items-center\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"inputCity\"\r\n                    className=\"form-control col-9 mr-2 text-uppercase font-weight-bold\"\r\n                    value={label}\r\n                    onChange={(e) => onInputChange(e)}\r\n                />\r\n                <button\r\n                    className=\"btn col-3 btn-primary\"\r\n                >\r\n                    Узнать погоду\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","export default class Wapi {\r\n    __getUrl = (city, units) => {\r\n        return `https://api.openweathermap.org/data/2.5/weather?q=${city.toLowerCase()}&appid=1c3c95e0972967b40cd22c2840f3bf71&units=${units}&lang=ru`;\r\n    }\r\n\r\n    getWeatherByCity = async (city, units = \"metric\") => {\r\n        const response = await fetch(this.__getUrl(city, units));\r\n        return response.json();\r\n    }\r\n}","import LastRequests from \"./last-requests\";\r\n\r\nexport default LastRequests;","import React, {useContext} from \"react\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport {Context} from \"../context\";\r\n\r\nconst LastRequests = () => {\r\n    const {lastRequests, onLastRequestClick, areThereRequests} = useContext(Context);\r\n    const reversedLastRequests = lastRequests.filter(el => el).reverse();\r\n    const elements = reversedLastRequests.map((el, idx) => {\r\n        return (\r\n            <Dropdown.Item\r\n                key={idx}\r\n                bsPrefix=\"dropdown-item text-uppercase font-weight-bold\"\r\n                as=\"button\"\r\n                onClick={() => onLastRequestClick(el)}\r\n            >\r\n                {el}\r\n            </Dropdown.Item>\r\n        );\r\n    });\r\n\r\n    if (areThereRequests) {\r\n        return (\r\n            <Dropdown>\r\n                <Dropdown.Toggle bsPrefix=\"dropdown-toggle btn btn-block btn-primary\">\r\n                    Последние запросы\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu bsPrefix=\"dropdown-menu w-100\">\r\n                    {elements}\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default LastRequests;","import React, {useState, useEffect} from \"react\";\r\nimport Form from \"../form\";\r\nimport {Context} from \"../context\";\r\nimport Wapi from \"../../services/wapi.service\";\r\nimport LastRequests from \"../last-requests\";\r\n\r\nconst UnitsMode = React.lazy(() => import(\"../units-mode\"));\r\nconst WeatherData = React.lazy(() => import(\"../weather-data\"));\r\nconst AppHeader = React.lazy(() => import(\"../app-header\"));\r\n\r\nconst App = () => {\r\n    const [label, setLabel] = useState(\"\");\r\n    const [weatherData, setWeatherData] = useState({});\r\n    const [weatherDataImperial, setWeatherDataImperial] = useState({});\r\n    const [loading, setLoading] = useState(false);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const units = localStorage.getItem(\"imperialUnits\") || false;\r\n    const [imperialUnits, setImperialUnits] = useState(units === \"true\");\r\n    const [lastRequests, setLastRequests] = useState(JSON.parse(localStorage.getItem(\"lastRequests\") || \"[]\"));\r\n    const [areThereRequests, setAreThereRequests] = useState(lastRequests.length !== 0);\r\n    const wapi = new Wapi();\r\n    const onInputChange = (e) => {\r\n        setLabel(e.target.value);\r\n    };\r\n    const onFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await setLoading(true);\r\n        await setLoaded(false);\r\n        await wapi.getWeatherByCity(label)\r\n            .then(data => {\r\n                setWeatherData(data);\r\n            });\r\n        await wapi.getWeatherByCity(label, \"imperial\")\r\n            .then(data => {\r\n                setWeatherDataImperial(data);\r\n                if (!data.message) {\r\n                    if (lastRequests.length >= 5) {\r\n                        let filteredRequests = lastRequests.filter(el => el);\r\n                        filteredRequests.push(data.name);\r\n                        filteredRequests = Array.from(new Set(filteredRequests));\r\n                        if (filteredRequests.length > 5) {\r\n                            filteredRequests = filteredRequests.filter((el, idx) => {\r\n                                return idx < 6 && idx !== 0;\r\n                            });\r\n                        } else {\r\n                            filteredRequests = filteredRequests.filter((el, idx) => {\r\n                                return idx < 6;\r\n                            });\r\n                        }\r\n                        setLastRequests(filteredRequests);\r\n                    } else {\r\n                        let filteredRequests = lastRequests.filter(() => {\r\n                            return true;\r\n                        });\r\n                        filteredRequests.push(data.name);\r\n                        filteredRequests = Array.from(new Set(filteredRequests));\r\n                        setLastRequests(filteredRequests);\r\n                    }\r\n                }\r\n                setLabel(\"\");\r\n            });\r\n        await setLoading(false);\r\n        await setLoaded(true);\r\n    };\r\n    const onUnitsModeChange = (e) => {\r\n        switch (e.target.value) {\r\n            case \"metric\":\r\n                setImperialUnits(false);\r\n                break;\r\n            case \"imperial\":\r\n                setImperialUnits(true);\r\n                break;\r\n            default:\r\n                console.log(\"Не удалось сменить единицы\");\r\n        }\r\n    };\r\n    const onLastRequestClick = async (label) => {\r\n        await setLoading(true);\r\n        await setLoaded(false);\r\n        await wapi.getWeatherByCity(label)\r\n            .then(data => {\r\n                setWeatherData(data);\r\n            });\r\n        await wapi.getWeatherByCity(label, \"imperial\")\r\n            .then(data => {\r\n                setWeatherDataImperial(data);\r\n            });\r\n        await setLoading(false);\r\n        await setLoaded(true);\r\n    };\r\n    useEffect(() => {\r\n        localStorage.setItem(\"imperialUnits\", imperialUnits.toString());\r\n    }, [imperialUnits]);\r\n    useEffect(() => {\r\n        localStorage.setItem(\"lastRequests\", JSON.stringify(lastRequests));\r\n        setAreThereRequests(lastRequests.length !== 0);\r\n    }, [lastRequests]);\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            label,\r\n            onInputChange,\r\n            onFormSubmit,\r\n            weatherData,\r\n            weatherDataImperial,\r\n            loading,\r\n            loaded,\r\n            imperialUnits,\r\n            onUnitsModeChange,\r\n            lastRequests,\r\n            onLastRequestClick,\r\n            areThereRequests\r\n        }}>\r\n            <div className=\"container\">\r\n                <div className=\"mb-2 d-flex justify-content-between align-items-center\">\r\n                    <React.Suspense fallback={<p>Loading app name...</p>}>\r\n                        <AppHeader />\r\n                    </React.Suspense>\r\n                    <React.Suspense fallback={<p>Loading units modes...</p>}>\r\n                        <UnitsMode />\r\n                    </React.Suspense>\r\n                </div>\r\n                <Form />\r\n                <React.Suspense fallback={<p>Loading weather information...</p>}>\r\n                    <WeatherData />\r\n                </React.Suspense>\r\n                <LastRequests />\r\n            </div>\r\n        </Context.Provider>\r\n    );\r\n};\r\n\r\nexport default App;","import App from \"./app\";\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(<App/>,\n    document.getElementById('root'));","import React from \"react\";\r\n\r\nexport const Context = React.createContext();"],"sourceRoot":""}